describe("match.ip", function()
  local t, ipnet
  setup(function()
    t = require "t"
    ipnet = t.match.ipnet
  end)
  it("positive", function()
    assert.equal('0.0.0.0/32', ipnet('0.0.0.0/32'))
    assert.equal('1.2.3.4/32', ipnet('1.2.3.4/32'))
    assert.equal('8.8.8.8/32', ipnet('8.8.8.8/32'))
    assert.equal('255.255.255.255/32', ipnet('255.255.255.255/32'))

    assert.equal('8.8.8.8/31', ipnet('8.8.8.8/31 '))

    assert.equal('8.8.8.8/32', ipnet('8.8.8.8/32 '))
    assert.equal('0.0.0.0/32', ipnet('0.0.0.0/32 '))
    assert.equal('255.255.255.255/32', ipnet(' 255.255.255.255/32'))
    assert.equal('1.2.3.4/32', ipnet(' 1.2.3.4/32'))

    assert.equal('0.0.0.0/255.255.255.255', ipnet('0.0.0.0/255.255.255.255'))
    assert.equal('1.2.3.4/255.255.255.255', ipnet('1.2.3.4/255.255.255.255'))
    assert.equal('8.8.8.8/255.255.255.255', ipnet('8.8.8.8/255.255.255.255'))
    assert.equal('255.255.255.255/255.255.255.255', ipnet('255.255.255.255/255.255.255.255'))
  end)
  it("negative", function()
    assert.is_nil(ipnet('8.8.8.8'))
    assert.is_nil(ipnet('0.0.0.0'))
    assert.is_nil(ipnet('255.255.255.255'))
    assert.is_nil(ipnet('1.2.3.4 '))
    assert.is_nil(ipnet('8.8.8.8 '))
    assert.is_nil(ipnet('0.0.0.0 '))
    assert.is_nil(ipnet('255.255.255.255 '))
    assert.is_nil(ipnet('1.2.3.4 '))

    assert.is_nil(ipnet('0.0.0.0/'))
    assert.is_nil(ipnet('255.255.255.255/333'))
    assert.is_nil(ipnet('1.2.3.4/322'))

    assert.is_nil(ipnet('-1'))
    assert.is_nil(ipnet('255+1'))
    assert.is_nil(ipnet('0.0.0.0.0'))
    assert.is_nil(ipnet('0.0.0.-1'))
    assert.is_nil(ipnet('-1.0.0.0'))
    assert.is_nil(ipnet('0.0.0.256'))
    assert.is_nil(ipnet('0.0.256.0'))
    assert.is_nil(ipnet('0.256.0.0'))
    assert.is_nil(ipnet('256.0.0.0'))
    assert.is_nil(ipnet('255.255.255.256'))
    assert.is_nil(ipnet(true))
    assert.is_nil(ipnet(false))
    assert.is_nil(ipnet(3))
    assert.is_nil(ipnet(0))
    assert.is_nil(ipnet({}))
    assert.is_nil(ipnet({1}))
    assert.is_nil(ipnet({'1.2.3.4'}))
  end)
  it("nil", function()
    assert.is_nil(ipnet())
    assert.is_nil(ipnet(nil))
  end)
end)